---
// Clientes5.astro - Carrusel de testimonios de clientes
const avatar1 =  "/src/assets/avatar1.jpg"; // Deberás añadir estas imágenes
const avatar2 =  "/src/assets/avatar2.jpg"; // o reemplazar con tus propias rutas
const avatar3 =  "/src/assets/avatar3.jpg";
---

<section id="clientes" class="py-16 md:py-20  bg-white overflow-hidden">
  <div class="container mx-auto px-4">
    <h2 class="text-center text-3xl sm:text-4xl md:text-5xl font-bold text-[#002655] mb-16 pt-10">
      Lo Que Dicen Nuestros Clientes
    </h2>

    <div class="relative max-w-6xl mx-auto">
      <!-- Carrusel de testimonios -->
      <div id="testimonials-carousel" class="overflow-hidden">
        <div id="testimonials-container" class="flex transition-transform duration-500 ease-in-out">
          <!-- Testimonio 1 -->
          <div class="testimonial-slide w-full sm:w-1/2 lg:w-1/3 px-3 flex-shrink-0">
            <div class="bg-gray-100 rounded-lg p-6 h-full flex flex-col">
              <div class="flex items-center mb-4">
                <div class="w-14 h-14 rounded-full overflow-hidden mr-4 flex-shrink-0">
                  <img 
                    src={avatar1 || "/src/assets/avatar1.jpg"} 
                    alt="Cliente" 
                    class="w-full h-full object-cover"
                    onerror="this.src='https://via.placeholder.com/56?text=H';this.onerror='';"
                  />
                </div>
                <div>
                  <h3 class="font-bold text-[#002655]">Jessie Owner</h3>
                  <p class="text-sm text-gray-600">Founder, XYZ Company</p>
                </div>
                <div class="ml-auto flex-shrink-0">
                  <div class="flex text-[#e55934]">
                    <span>★★★★★</span>
                  </div>
                </div>
              </div>
              
              <p class="text-gray-700 flex-grow mb-2">
                "Hablix nos permitió optimizar toda nuestra comunicación sin necesidad de invertir en nuevos equipos. Ahora gestionamos llamadas, mensajes y reuniones en una sola plataforma segura y eficiente."
              </p>
            </div>
          </div>

          <!-- Testimonio 2 -->
          <div class="testimonial-slide w-full sm:w-1/2 lg:w-1/3 px-3 flex-shrink-0">
            <div class="bg-gray-100 rounded-lg p-6 h-full flex flex-col">
              <div class="flex items-center mb-4">
                <div class="w-14 h-14 rounded-full overflow-hidden mr-4 flex-shrink-0">
                  <img 
                    src={avatar2} 
                    alt="Cliente" 
                    class="w-full h-full object-cover"
                    onerror="this.src='https://via.placeholder.com/56?text=H';this.onerror='';"
                  />
                </div>
                <div>
                  <h3 class="font-bold text-[#002655]">Jessie Owner</h3>
                  <p class="text-sm text-gray-600">Founder, XYZ Company</p>
                </div>
                <div class="ml-auto flex-shrink-0">
                  <div class="flex text-[#e55934]">
                    <span>★★★★★</span>
                  </div>
                </div>
              </div>
              
              <p class="text-gray-700 flex-grow mb-2">
                "Hablix nos permitió optimizar toda nuestra comunicación sin necesidad de invertir en nuevos equipos. Ahora gestionamos llamadas, mensajes y reuniones en una sola plataforma segura y eficiente."
              </p>
            </div>
          </div>

          <!-- Testimonio 3 -->
          <div class="testimonial-slide w-full sm:w-1/2 lg:w-1/3 px-3 flex-shrink-0">
            <div class="bg-gray-100 rounded-lg p-6 h-full flex flex-col">
              <div class="flex items-center mb-4">
                <div class="w-14 h-14 rounded-full overflow-hidden mr-4 flex-shrink-0">
                  <img 
                    src={avatar3 || "/src/assets/avatar3.jpg"} 
                    alt="Cliente" 
                    class="w-full h-full object-cover"
                    onerror="this.src='https://via.placeholder.com/56?text=H';this.onerror='';"
                  />
                </div>
                <div>
                  <h3 class="font-bold text-[#002655]">Jessie Owner</h3>
                  <p class="text-sm text-gray-600">Founder, XYZ Company</p>
                </div>
                <div class="ml-auto flex-shrink-0">
                  <div class="flex text-[#e55934]">
                    <span>★★★★★</span>
                  </div>
                </div>
              </div>
              
              <p class="text-gray-700 flex-grow mb-2">
                "Hablix nos permitió optimizar toda nuestra comunicación sin necesidad de invertir en nuevos equipos. Ahora gestionamos llamadas, mensajes y reuniones en una sola plataforma segura y eficiente."
              </p>
            </div>
          </div>

          <!-- Copias adicionales para loop continuo -->
          <div class="testimonial-slide w-full sm:w-1/2 lg:w-1/3 px-3 flex-shrink-0">
            <div class="bg-gray-100 rounded-lg p-6 h-full flex flex-col">
              <div class="flex items-center mb-4">
                <div class="w-14 h-14 rounded-full overflow-hidden mr-4 flex-shrink-0">
                  <img 
                    src={avatar1 || "/src/assets/avatar1.jpg"} 
                    alt="Cliente" 
                    class="w-full h-full object-cover"
                    onerror="this.src='https://via.placeholder.com/56?text=H';this.onerror='';"
                  />
                </div>
                <div>
                  <h3 class="font-bold text-[#002655]">Jessie Owner</h3>
                  <p class="text-sm text-gray-600">Founder, XYZ Company</p>
                </div>
                <div class="ml-auto flex-shrink-0">
                  <div class="flex text-[#e55934]">
                    <span>★★★★★</span>
                  </div>
                </div>
              </div>
              
              <p class="text-gray-700 flex-grow mb-2">
                "Hablix nos permitió optimizar toda nuestra comunicación sin necesidad de invertir en nuevos equipos. Ahora gestionamos llamadas, mensajes y reuniones en una sola plataforma segura y eficiente."
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Botones de navegación -->
      <div class="flex justify-center mt-8 md:mt-10 gap-4">
        <button 
          id="prevBtn" 
          class="w-10 h-10 rounded-full bg-gray-200 hover:bg-gray-300 flex items-center justify-center focus:outline-none transition-colors"
          aria-label="Testimonio anterior"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-[#002655]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
        <button 
          id="nextBtn" 
          class="w-10 h-10 rounded-full bg-gray-200 hover:bg-gray-300 flex items-center justify-center focus:outline-none transition-colors"
          aria-label="Testimonio siguiente"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-[#002655]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('testimonials-container');
    const slides = document.querySelectorAll('.testimonial-slide');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    
    // Exit if essential elements aren't found
    if (!container || !prevBtn || !nextBtn || slides.length === 0) {
      console.error('Carousel elements not found');
      return;
    }

    let currentIndex = 0;
    let slideWidth = 0;
    let slidesToShow = 3; // Por defecto en escritorio
    const totalSlides = slides.length;
    
    // Función para actualizar el ancho del slide y la cantidad de slides a mostrar según el viewport
    function updateSlideWidth() {
      const viewportWidth = window.innerWidth;
      
      // Determinar cuántos slides mostrar según el ancho de la pantalla
      if (viewportWidth < 640) { // Móvil
        slidesToShow = 1;
      } else if (viewportWidth < 1024) { // Tablet
        slidesToShow = 2;
      } else { // Desktop
        slidesToShow = 3;
      }
      
      // Calcular el ancho correcto para cada slide
      const carouselElement = document.getElementById('testimonials-carousel');
      const carouselWidth = carouselElement ? carouselElement.clientWidth : 0;
      slideWidth = carouselWidth / slidesToShow;
      
      // Actualizar el ancho de cada slide
      slides.forEach(slide => {
        slide.style.width = `${slideWidth}px`;
      });
      
      // Actualizar la posición
      goToSlide(currentIndex, false);
    }

    // Ir a un slide específico
    function goToSlide(index, animate = true) {
      // Establecer el límite de desplazamiento para evitar espacios vacíos
      const maxIndex = totalSlides - slidesToShow;
      
      // Manejar los límites (inicio/fin)
      if (index < 0) {
        index = 0;
      } else if (index > maxIndex) {
        index = maxIndex;
      }
      
      currentIndex = index;
      const offset = -slideWidth * currentIndex;
      
      // Aplicar o quitar la transición según necesitemos
      if (!animate) {
        container.style.transition = 'none';
      } else {
        container.style.transition = 'transform 500ms ease-in-out';
      }
      
      container.style.transform = `translateX(${offset}px)`;
      
      // Si quitamos la transición, forzar un reflow y restaurarla
      if (!animate) {
        setTimeout(() => {
          container.style.transition = 'transform 500ms ease-in-out';
        }, 50);
      }
      
      // Actualizar estado de los botones
      updateButtonStates();
    }
    
    // Actualizar estado de los botones (deshabilitarlos en los extremos)
    function updateButtonStates() {
      if (!prevBtn || !nextBtn) return;
      
      prevBtn.disabled = currentIndex <= 0;
      nextBtn.disabled = currentIndex >= (totalSlides - slidesToShow);
      
      // Reflejar visualmente el estado desactivado
      prevBtn.classList.toggle('opacity-50', prevBtn.disabled);
      nextBtn.classList.toggle('opacity-50', nextBtn.disabled);
    }

    // Event listeners para los botones
    prevBtn.addEventListener('click', () => {
      goToSlide(currentIndex - 1);
    });
    
    nextBtn.addEventListener('click', () => {
      goToSlide(currentIndex + 1);
    });
    
    // Actualizar cuando cambia el tamaño de la ventana
    window.addEventListener('resize', updateSlideWidth);
    
    // Inicializar
    updateSlideWidth();

    // Autoplay con mejor manejo de transiciones
    let autoplayInterval;
    let isAutoplayEnabled = true;
    
    function startAutoplay() {
      if (!isAutoplayEnabled) return;
      
      stopAutoplay(); // Limpiar cualquier intervalo existente primero
      
      autoplayInterval = setInterval(() => {
        // Avanzar al siguiente slide o volver al principio si estamos al final
        if (currentIndex >= (totalSlides - slidesToShow)) {
          goToSlide(0);
        } else {
          goToSlide(currentIndex + 1);
        }
      }, 5000); // Cambiar slide cada 5 segundos
    }
    
    function stopAutoplay() {
      clearInterval(autoplayInterval);
    }
    
    // Iniciar autoplay
    startAutoplay();
    
    // Detener autoplay al interactuar con los botones o carrusel
    const carouselElement = document.getElementById('testimonials-carousel');
    const interactiveElements = [
      prevBtn, nextBtn, carouselElement
    ].filter(element => element !== null); // Filter out any null elements
    
    interactiveElements.forEach(element => {
      element.addEventListener('mouseenter', () => {
        stopAutoplay();
        isAutoplayEnabled = false;
      });
      
      element.addEventListener('mouseleave', () => {
        isAutoplayEnabled = true;
        startAutoplay();
      });
      
      // También detener en touch para dispositivos móviles
      element.addEventListener('touchstart', () => {
        stopAutoplay();
        isAutoplayEnabled = false;
      }, {passive: true});
      
      element.addEventListener('touchend', () => {
        isAutoplayEnabled = true;
        startAutoplay();
      }, {passive: true});
    });
  });
</script>